# Generated by Django 3.0.5 on 2020-06-14 20:23

from django.db import migrations
import re


def increment_slug(slug, used_slugs, depth=0):
    if depth > 0:
        slug_with_depth = '{}-{}'.format(slug, depth)
    else:
        slug_with_depth = slug
    if slug_with_depth in used_slugs:
        print('slug {} already in list, trying depth {}'.format(slug_with_depth, depth + 1))
        return increment_slug(slug, used_slugs, depth + 1)
    else:
        return slug_with_depth


def clean_posts(apps, schema_editor):
    Post = apps.get_model('posts', 'Post')
    img_re = re.compile(r'<img src="?\.\.\/assets\/images\/(.*)"? \/>')
    slug_re = re.compile(r"(&[a-z0-9]+;)|(#[a-z0-9]+;)|[^a-z0-9\-]")
    used_slugs = []
    for post in Post.objects.all():
        # If titles are empty, make them a tilde.
        if not post.title:
            post.title = '~'
        # Strip HTML from title.
        title = re.sub(r'<\/?[a-z]+>', '', post.title).strip()
        post.title = title

        # Fix images pointing at ../assets/images/...
        body = post.text
        body = img_re.sub(
            '<img src="https://storage.cloud.google.com/denyconformity_assets/\g<1>" />', body)
        post.text = body

        # Generate a slug
        slug = title.replace(' ', '-').lower()
        slug = slug_re.sub("", slug)
        if not slug:
            slug = 'post-' + str(post.id)
        post.slug = increment_slug(slug, used_slugs)
        used_slugs.append(post.slug)

        post.save(update_fields=['title', 'text', 'slug'])


class Migration(migrations.Migration):

    dependencies = [
        ('posts', '0003_add_slug_field'),
    ]

    operations = [
        migrations.RunPython(
            clean_posts, reverse_code=migrations.RunPython.noop),
    ]
